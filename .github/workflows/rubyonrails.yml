# This workflow uses actions that are not certified by GitHub.  They are
# provided by a third-party and are governed by separate terms of service,
# privacy policy, and support documentation.
#
# This workflow will install a prebuilt Ruby version, install dependencies, and
# run tests and linters.
name: "Ruby on Rails CI"
on:
  push:
    branches: [ "main" ]
  # pull_request:
    # branches: [ "main" ]
jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mariadb:
        image: mariadb:latest
        ports:
          - "3306:3306"
        env:
          MARIADB_ROOT_PASSWORD: kucharka
          MARIADB_DATABASE: kucharka_test
          MARIADB_USER: kucharka
          MARIADB_PASSWORD: kucharka
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    env:
      RAILS_ENV: test
      DATABASE_URL: "mysql2://kucharka:kucharka@127.0.0.1:3306/kucharka_test"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      # Add or replace dependency steps here
      - name: Install Ruby and gems
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      # - name: Create database
        # run: bin/rails db:create
      - name: Start mysql
        run: sudo /etc/init.d/mysql start
      # Add or replace database setup steps here
      - name: Set up database schema
        run: bin/rails db:setup
      # Add or replace test runners here
      - name: Run tests
        run: bin/rails test

  lint:
    env:
      RAILS_ENV: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install Ruby and gems
        uses: ruby/setup-ruby@v1 # v1.146.0
        with:
          bundler-cache: false
      - name: Install gems
        run: bundle install --jobs 4 --retry 3
      # Add or replace any other lints here
      - name: Security audit dependencies
        run: bundler-audit --update
        continue-on-error: true
      - name: Security audit application code
        run: brakeman -q -w2
        continue-on-error: true
      - name: Lint Ruby files
        run: rubocop --parallel
        continue-on-error: true
      - name: Check rails best practices
        run: rails_best_practices 
        continue-on-error: true
      
